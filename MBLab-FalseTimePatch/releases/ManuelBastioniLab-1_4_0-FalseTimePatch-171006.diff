Only in manuelbastionilab_patched/: .DS_Store
diff -rup manuelbastionilab_140/__init__.py manuelbastionilab_patched/__init__.py
--- manuelbastionilab_140/__init__.py	2016-10-30 17:16:06.000000000 +0100
+++ manuelbastionilab_patched/__init__.py	2016-11-08 12:30:24.000000000 +0100
@@ -237,6 +237,20 @@ def realtime_update(self, context):
         the_humanoid.sync_gui_according_measures()
         #print("realtime_update: {0}".format(time.time()-time1))
 
+def falsetime_update(self, context):
+    """
+    Update the character while the prop slider moves.
+    """
+    global the_humanoid
+    if True:#the_humanoid.bodydata_activated:
+        #time1 = time.time()
+        scn = bpy.context.scene
+        print("falsetime_update")
+        the_humanoid.update_character(category_name = "all", mode="update_all")
+        the_humanoid.sync_gui_according_measures()
+        #print("realtime_update: {0}".format(time.time()-time1))
+        
+        
 def age_update(self, context):
     global the_humanoid
     if the_humanoid.metadata_realtime_activated:
@@ -1508,6 +1522,16 @@ class LoadPose(bpy.types.Operator, Impor
         char_data = the_humanoid.load_pose(self.filepath)
         return {'FINISHED'}
 
+class FalsetimeUpdate(bpy.types.Operator):
+    bl_idname = "refresh.character"
+    bl_label = "refresh character"
+    bl_description = 'Refresh the character'
+    bl_context = 'objectmode'
+    bl_options = {'REGISTER', 'INTERNAL'}
+
+    def execute(self, context):
+        falsetime_update(self, context)
+        return {'FINISHED'}
 
 
 class StartSession(bpy.types.Operator):
diff -rup manuelbastionilab_140/humanoid.py manuelbastionilab_patched/humanoid.py
--- manuelbastionilab_140/humanoid.py	2016-10-30 16:07:02.000000000 +0100
+++ manuelbastionilab_patched/humanoid.py	2016-11-08 12:35:01.000000000 +0100
@@ -800,15 +800,21 @@ class Humanoid:
             self.m_engine.update(update_all_verts=True)
         else:
             if category_name:
-                category = self.categories[category_name]
-                modified_modifiers = []
-                for modifier in category.get_modifiers():
-                    if modifier.is_changed(self.character_data):
-                        modified_modifiers.append(modifier)
-                for modifier in modified_modifiers:
-                    if sync_morphdata:
-                        modifier.sync_modifier_data_to_obj_prop(self.character_data)
-                    self.combine_morphings(modifier)
+                if (category_name == "all"):
+                    for category in self.get_categories():
+                        for modifier in category.get_modifiers():
+                            modifier.sync_modifier_data_to_obj_prop(self.character_data)
+                            self.combine_morphings(modifier, add_vertices_to_update=True)
+                else:                
+                    category = self.categories[category_name]
+                    modified_modifiers = []
+                    for modifier in category.get_modifiers():
+                        if modifier.is_changed(self.character_data):
+                            modified_modifiers.append(modifier)
+                    for modifier in modified_modifiers:
+                        if sync_morphdata:
+                            modifier.sync_modifier_data_to_obj_prop(self.character_data)
+                            self.combine_morphings(modifier)
             else:
                 for category in self.get_categories():
                     for modifier in category.get_modifiers():
